{
	"id": "4e43030b29edb353ba9f2bffeee6ac58",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/2_SpecialNfts.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\r\n\r\ncontract SpecialNfts {\r\n    IERC721Enumerable public myNFTContract;\r\n\r\n    constructor(IERC721Enumerable _NFTAddress) {\r\n        myNFTContract = _NFTAddress;\r\n    }\r\n\r\n    function specialNftsCount(address _owner) external view returns (uint256) {\r\n        uint256 NFTsCount = myNFTContract.balanceOf(_owner);\r\n        uint256 specialNFTsCount;\r\n        for (uint256 i = 0; i < NFTsCount; i++) {\r\n            uint256 _tokenId = myNFTContract.tokenOfOwnerByIndex(_owner, i);\r\n            if(isPrime(_tokenId)) {\r\n                specialNFTsCount++;\r\n            }\r\n        }\r\n        return specialNFTsCount;\r\n    }\r\n\r\n    function isPrime(uint256 _num) internal pure returns (bool) {\r\n        uint256 s = sqrt(_num);\r\n        for(uint256 i = 2; i <= s; i++) {\r\n            if(_num % i == 0) return false;\r\n        }\r\n\r\n        return _num > 1;\r\n    }\r\n\r\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint256 x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/2_SpecialNfts.sol": {
				"SpecialNfts": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC721Enumerable",
									"name": "_NFTAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "myNFTContract",
							"outputs": [
								{
									"internalType": "contract IERC721Enumerable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "specialNftsCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/2_SpecialNfts.sol\":142:1315  contract SpecialNfts {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/2_SpecialNfts.sol\":217:306  constructor(IERC721Enumerable _NFTAddress) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/2_SpecialNfts.sol\":287:298  _NFTAddress */\n  dup1\n    /* \"contracts/2_SpecialNfts.sol\":271:284  myNFTContract */\n  0x00\n  dup1\n    /* \"contracts/2_SpecialNfts.sol\":271:298  myNFTContract = _NFTAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/2_SpecialNfts.sol\":217:306  constructor(IERC721Enumerable _NFTAddress) {\r... */\n  pop\n    /* \"contracts/2_SpecialNfts.sol\":142:1315  contract SpecialNfts {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:200   */\ntag_8:\n    /* \"#utility.yul\":89:94   */\n  0x00\n    /* \"#utility.yul\":120:126   */\n  dup2\n    /* \"#utility.yul\":114:127   */\n  mload\n    /* \"#utility.yul\":105:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":136:194   */\n  tag_10\n    /* \"#utility.yul\":188:193   */\n  dup2\n    /* \"#utility.yul\":136:194   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:200   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":206:607   */\ntag_3:\n    /* \"#utility.yul\":301:307   */\n  0x00\n    /* \"#utility.yul\":350:352   */\n  0x20\n    /* \"#utility.yul\":338:347   */\n  dup3\n    /* \"#utility.yul\":329:336   */\n  dup5\n    /* \"#utility.yul\":325:348   */\n  sub\n    /* \"#utility.yul\":321:353   */\n  slt\n    /* \"#utility.yul\":318:437   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":356:435   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":318:437   */\ntag_13:\n    /* \"#utility.yul\":476:477   */\n  0x00\n    /* \"#utility.yul\":501:590   */\n  tag_16\n    /* \"#utility.yul\":582:589   */\n  dup5\n    /* \"#utility.yul\":573:579   */\n  dup3\n    /* \"#utility.yul\":562:571   */\n  dup6\n    /* \"#utility.yul\":558:580   */\n  add\n    /* \"#utility.yul\":501:590   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":491:590   */\n  swap2\n  pop\n    /* \"#utility.yul\":447:600   */\n  pop\n    /* \"#utility.yul\":206:607   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:790   */\ntag_19:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":760:784   */\n  tag_21\n    /* \"#utility.yul\":778:783   */\n  dup3\n    /* \"#utility.yul\":760:784   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":749:784   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:790   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":796:917   */\ntag_23:\n    /* \"#utility.yul\":858:865   */\n  0x00\n    /* \"#utility.yul\":887:911   */\n  tag_25\n    /* \"#utility.yul\":905:910   */\n  dup3\n    /* \"#utility.yul\":887:911   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":876:911   */\n  swap1\n  pop\n    /* \"#utility.yul\":796:917   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":923:1049   */\ntag_22:\n    /* \"#utility.yul\":960:967   */\n  0x00\n    /* \"#utility.yul\":1000:1042   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":993:998   */\n  dup3\n    /* \"#utility.yul\":989:1043   */\n  and\n    /* \"#utility.yul\":978:1043   */\n  swap1\n  pop\n    /* \"#utility.yul\":923:1049   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1178:1295   */\ntag_15:\n    /* \"#utility.yul\":1287:1288   */\n  0x00\n    /* \"#utility.yul\":1284:1285   */\n  dup1\n    /* \"#utility.yul\":1277:1289   */\n  revert\n    /* \"#utility.yul\":1301:1473   */\ntag_11:\n    /* \"#utility.yul\":1399:1448   */\n  tag_31\n    /* \"#utility.yul\":1442:1447   */\n  dup2\n    /* \"#utility.yul\":1399:1448   */\n  tag_23\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1392:1397   */\n  dup2\n    /* \"#utility.yul\":1389:1449   */\n  eq\n    /* \"#utility.yul\":1379:1467   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1463:1464   */\n  0x00\n    /* \"#utility.yul\":1460:1461   */\n  dup1\n    /* \"#utility.yul\":1453:1465   */\n  revert\n    /* \"#utility.yul\":1379:1467   */\ntag_32:\n    /* \"#utility.yul\":1301:1473   */\n  pop\n  jump\t// out\n    /* \"contracts/2_SpecialNfts.sol\":142:1315  contract SpecialNfts {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/2_SpecialNfts.sol\":142:1315  contract SpecialNfts {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x37c57593\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xcaa093b7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/2_SpecialNfts.sol\":314:756  function specialNftsCount(address _owner) external view returns (uint256) {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/2_SpecialNfts.sol\":170:208  IERC721Enumerable public myNFTContract */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/2_SpecialNfts.sol\":314:756  function specialNftsCount(address _owner) external view returns (uint256) {\r... */\n    tag_8:\n        /* \"contracts/2_SpecialNfts.sol\":379:386  uint256 */\n      0x00\n        /* \"contracts/2_SpecialNfts.sol\":399:416  uint256 NFTsCount */\n      dup1\n        /* \"contracts/2_SpecialNfts.sol\":419:432  myNFTContract */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/2_SpecialNfts.sol\":419:442  myNFTContract.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/2_SpecialNfts.sol\":443:449  _owner */\n      dup5\n        /* \"contracts/2_SpecialNfts.sol\":419:450  myNFTContract.balanceOf(_owner) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_20:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"contracts/2_SpecialNfts.sol\":399:450  uint256 NFTsCount = myNFTContract.balanceOf(_owner) */\n      swap1\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":461:485  uint256 specialNFTsCount */\n      0x00\n        /* \"contracts/2_SpecialNfts.sol\":501:510  uint256 i */\n      dup1\n        /* \"contracts/2_SpecialNfts.sol\":513:514  0 */\n      0x00\n        /* \"contracts/2_SpecialNfts.sol\":501:514  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":496:715  for (uint256 i = 0; i < NFTsCount; i++) {\r... */\n    tag_23:\n        /* \"contracts/2_SpecialNfts.sol\":520:529  NFTsCount */\n      dup3\n        /* \"contracts/2_SpecialNfts.sol\":516:517  i */\n      dup2\n        /* \"contracts/2_SpecialNfts.sol\":516:529  i < NFTsCount */\n      lt\n        /* \"contracts/2_SpecialNfts.sol\":496:715  for (uint256 i = 0; i < NFTsCount; i++) {\r... */\n      iszero\n      tag_24\n      jumpi\n        /* \"contracts/2_SpecialNfts.sol\":551:567  uint256 _tokenId */\n      0x00\n        /* \"contracts/2_SpecialNfts.sol\":570:583  myNFTContract */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/2_SpecialNfts.sol\":570:603  myNFTContract.tokenOfOwnerByIndex */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2f745c59\n        /* \"contracts/2_SpecialNfts.sol\":604:610  _owner */\n      dup8\n        /* \"contracts/2_SpecialNfts.sol\":612:613  i */\n      dup5\n        /* \"contracts/2_SpecialNfts.sol\":570:614  myNFTContract.tokenOfOwnerByIndex(_owner, i) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n        /* \"contracts/2_SpecialNfts.sol\":551:614  uint256 _tokenId = myNFTContract.tokenOfOwnerByIndex(_owner, i) */\n      swap1\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":632:649  isPrime(_tokenId) */\n      tag_32\n        /* \"contracts/2_SpecialNfts.sol\":640:648  _tokenId */\n      dup2\n        /* \"contracts/2_SpecialNfts.sol\":632:639  isPrime */\n      tag_33\n        /* \"contracts/2_SpecialNfts.sol\":632:649  isPrime(_tokenId) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/2_SpecialNfts.sol\":629:704  if(isPrime(_tokenId)) {\r... */\n      iszero\n      tag_34\n      jumpi\n        /* \"contracts/2_SpecialNfts.sol\":670:688  specialNFTsCount++ */\n      dup3\n      dup1\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      swap4\n      pop\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":629:704  if(isPrime(_tokenId)) {\r... */\n    tag_34:\n        /* \"contracts/2_SpecialNfts.sol\":536:715  {\r... */\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":531:534  i++ */\n      dup1\n      dup1\n      tag_37\n      swap1\n      tag_36\n      jump\t// in\n    tag_37:\n      swap2\n      pop\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":496:715  for (uint256 i = 0; i < NFTsCount; i++) {\r... */\n      jump(tag_23)\n    tag_24:\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":732:748  specialNFTsCount */\n      dup1\n        /* \"contracts/2_SpecialNfts.sol\":725:748  return specialNFTsCount */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":314:756  function specialNftsCount(address _owner) external view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/2_SpecialNfts.sol\":170:208  IERC721Enumerable public myNFTContract */\n    tag_12:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/2_SpecialNfts.sol\":764:992  function isPrime(uint256 _num) internal pure returns (bool) {\r... */\n    tag_33:\n        /* \"contracts/2_SpecialNfts.sol\":818:822  bool */\n      0x00\n        /* \"contracts/2_SpecialNfts.sol\":835:844  uint256 s */\n      dup1\n        /* \"contracts/2_SpecialNfts.sol\":847:857  sqrt(_num) */\n      tag_39\n        /* \"contracts/2_SpecialNfts.sol\":852:856  _num */\n      dup4\n        /* \"contracts/2_SpecialNfts.sol\":847:851  sqrt */\n      tag_40\n        /* \"contracts/2_SpecialNfts.sol\":847:857  sqrt(_num) */\n      jump\t// in\n    tag_39:\n        /* \"contracts/2_SpecialNfts.sol\":835:857  uint256 s = sqrt(_num) */\n      swap1\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":872:881  uint256 i */\n      0x00\n        /* \"contracts/2_SpecialNfts.sol\":884:885  2 */\n      0x02\n        /* \"contracts/2_SpecialNfts.sol\":872:885  uint256 i = 2 */\n      swap1\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":868:957  for(uint256 i = 2; i <= s; i++) {\r... */\n    tag_41:\n        /* \"contracts/2_SpecialNfts.sol\":892:893  s */\n      dup2\n        /* \"contracts/2_SpecialNfts.sol\":887:888  i */\n      dup2\n        /* \"contracts/2_SpecialNfts.sol\":887:893  i <= s */\n      gt\n        /* \"contracts/2_SpecialNfts.sol\":868:957  for(uint256 i = 2; i <= s; i++) {\r... */\n      tag_42\n      jumpi\n        /* \"contracts/2_SpecialNfts.sol\":930:931  0 */\n      0x00\n        /* \"contracts/2_SpecialNfts.sol\":925:926  i */\n      dup2\n        /* \"contracts/2_SpecialNfts.sol\":918:922  _num */\n      dup6\n        /* \"contracts/2_SpecialNfts.sol\":918:926  _num % i */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"contracts/2_SpecialNfts.sol\":918:931  _num % i == 0 */\n      eq\n        /* \"contracts/2_SpecialNfts.sol\":915:945  if(_num % i == 0) return false */\n      iszero\n      tag_46\n      jumpi\n        /* \"contracts/2_SpecialNfts.sol\":940:945  false */\n      0x00\n        /* \"contracts/2_SpecialNfts.sol\":933:945  return false */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_38)\n        /* \"contracts/2_SpecialNfts.sol\":915:945  if(_num % i == 0) return false */\n    tag_46:\n        /* \"contracts/2_SpecialNfts.sol\":895:898  i++ */\n      dup1\n      dup1\n      tag_47\n      swap1\n      tag_36\n      jump\t// in\n    tag_47:\n      swap2\n      pop\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":868:957  for(uint256 i = 2; i <= s; i++) {\r... */\n      jump(tag_41)\n    tag_42:\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":983:984  1 */\n      0x01\n        /* \"contracts/2_SpecialNfts.sol\":976:980  _num */\n      dup4\n        /* \"contracts/2_SpecialNfts.sol\":976:984  _num > 1 */\n      gt\n        /* \"contracts/2_SpecialNfts.sol\":969:984  return _num > 1 */\n      swap2\n      pop\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":764:992  function isPrime(uint256 _num) internal pure returns (bool) {\r... */\n    tag_38:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/2_SpecialNfts.sol\":1000:1312  function sqrt(uint256 y) internal pure returns (uint256 z) {\r... */\n    tag_40:\n        /* \"contracts/2_SpecialNfts.sol\":1048:1057  uint256 z */\n      0x00\n        /* \"contracts/2_SpecialNfts.sol\":1078:1079  3 */\n      0x03\n        /* \"contracts/2_SpecialNfts.sol\":1074:1075  y */\n      dup3\n        /* \"contracts/2_SpecialNfts.sol\":1074:1079  y > 3 */\n      gt\n        /* \"contracts/2_SpecialNfts.sol\":1070:1305  if (y > 3) {\r... */\n      iszero\n      tag_49\n      jumpi\n        /* \"contracts/2_SpecialNfts.sol\":1100:1101  y */\n      dup2\n        /* \"contracts/2_SpecialNfts.sol\":1096:1101  z = y */\n      swap1\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":1116:1125  uint256 x */\n      0x00\n        /* \"contracts/2_SpecialNfts.sol\":1136:1137  1 */\n      0x01\n        /* \"contracts/2_SpecialNfts.sol\":1132:1133  2 */\n      0x02\n        /* \"contracts/2_SpecialNfts.sol\":1128:1129  y */\n      dup5\n        /* \"contracts/2_SpecialNfts.sol\":1128:1133  y / 2 */\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"contracts/2_SpecialNfts.sol\":1128:1137  y / 2 + 1 */\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"contracts/2_SpecialNfts.sol\":1116:1137  uint256 x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":1152:1244  while (x < z) {\r... */\n    tag_54:\n        /* \"contracts/2_SpecialNfts.sol\":1163:1164  z */\n      dup2\n        /* \"contracts/2_SpecialNfts.sol\":1159:1160  x */\n      dup2\n        /* \"contracts/2_SpecialNfts.sol\":1159:1164  x < z */\n      lt\n        /* \"contracts/2_SpecialNfts.sol\":1152:1244  while (x < z) {\r... */\n      iszero\n      tag_55\n      jumpi\n        /* \"contracts/2_SpecialNfts.sol\":1189:1190  x */\n      dup1\n        /* \"contracts/2_SpecialNfts.sol\":1185:1190  z = x */\n      swap2\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":1227:1228  2 */\n      0x02\n        /* \"contracts/2_SpecialNfts.sol\":1222:1223  x */\n      dup2\n        /* \"contracts/2_SpecialNfts.sol\":1218:1219  x */\n      dup3\n        /* \"contracts/2_SpecialNfts.sol\":1214:1215  y */\n      dup6\n        /* \"contracts/2_SpecialNfts.sol\":1214:1219  y / x */\n      tag_56\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_56:\n        /* \"contracts/2_SpecialNfts.sol\":1214:1223  y / x + x */\n      tag_57\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_57:\n        /* \"contracts/2_SpecialNfts.sol\":1213:1228  (y / x + x) / 2 */\n      tag_58\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_58:\n        /* \"contracts/2_SpecialNfts.sol\":1209:1228  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":1152:1244  while (x < z) {\r... */\n      jump(tag_54)\n    tag_55:\n        /* \"contracts/2_SpecialNfts.sol\":1081:1255  {\r... */\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":1070:1305  if (y > 3) {\r... */\n      jump(tag_59)\n    tag_49:\n        /* \"contracts/2_SpecialNfts.sol\":1270:1271  0 */\n      0x00\n        /* \"contracts/2_SpecialNfts.sol\":1265:1266  y */\n      dup3\n        /* \"contracts/2_SpecialNfts.sol\":1265:1271  y != 0 */\n      eq\n        /* \"contracts/2_SpecialNfts.sol\":1261:1305  if (y != 0) {\r... */\n      tag_60\n      jumpi\n        /* \"contracts/2_SpecialNfts.sol\":1292:1293  1 */\n      0x01\n        /* \"contracts/2_SpecialNfts.sol\":1288:1293  z = 1 */\n      swap1\n      pop\n        /* \"contracts/2_SpecialNfts.sol\":1261:1305  if (y != 0) {\r... */\n    tag_60:\n        /* \"contracts/2_SpecialNfts.sol\":1070:1305  if (y > 3) {\r... */\n    tag_59:\n        /* \"contracts/2_SpecialNfts.sol\":1000:1312  function sqrt(uint256 y) internal pure returns (uint256 z) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_62:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_64\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:295   */\n    tag_66:\n        /* \"#utility.yul\":209:214   */\n      0x00\n        /* \"#utility.yul\":240:246   */\n      dup2\n        /* \"#utility.yul\":234:247   */\n      mload\n        /* \"#utility.yul\":225:247   */\n      swap1\n      pop\n        /* \"#utility.yul\":256:289   */\n      tag_68\n        /* \"#utility.yul\":283:288   */\n      dup2\n        /* \"#utility.yul\":256:289   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":152:295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":301:630   */\n    tag_7:\n        /* \"#utility.yul\":360:366   */\n      0x00\n        /* \"#utility.yul\":409:411   */\n      0x20\n        /* \"#utility.yul\":397:406   */\n      dup3\n        /* \"#utility.yul\":388:395   */\n      dup5\n        /* \"#utility.yul\":384:407   */\n      sub\n        /* \"#utility.yul\":380:412   */\n      slt\n        /* \"#utility.yul\":377:496   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":377:496   */\n    tag_71:\n        /* \"#utility.yul\":535:536   */\n      0x00\n        /* \"#utility.yul\":560:613   */\n      tag_74\n        /* \"#utility.yul\":605:612   */\n      dup5\n        /* \"#utility.yul\":596:602   */\n      dup3\n        /* \"#utility.yul\":585:594   */\n      dup6\n        /* \"#utility.yul\":581:603   */\n      add\n        /* \"#utility.yul\":560:613   */\n      tag_62\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":550:613   */\n      swap2\n      pop\n        /* \"#utility.yul\":506:623   */\n      pop\n        /* \"#utility.yul\":301:630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":636:987   */\n    tag_22:\n        /* \"#utility.yul\":706:712   */\n      0x00\n        /* \"#utility.yul\":755:757   */\n      0x20\n        /* \"#utility.yul\":743:752   */\n      dup3\n        /* \"#utility.yul\":734:741   */\n      dup5\n        /* \"#utility.yul\":730:753   */\n      sub\n        /* \"#utility.yul\":726:758   */\n      slt\n        /* \"#utility.yul\":723:842   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":761:840   */\n      tag_77\n      tag_73\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":723:842   */\n    tag_76:\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":906:970   */\n      tag_78\n        /* \"#utility.yul\":962:969   */\n      dup5\n        /* \"#utility.yul\":953:959   */\n      dup3\n        /* \"#utility.yul\":942:951   */\n      dup6\n        /* \"#utility.yul\":938:960   */\n      add\n        /* \"#utility.yul\":906:970   */\n      tag_66\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":896:970   */\n      swap2\n      pop\n        /* \"#utility.yul\":852:980   */\n      pop\n        /* \"#utility.yul\":636:987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":993:1111   */\n    tag_79:\n        /* \"#utility.yul\":1080:1104   */\n      tag_81\n        /* \"#utility.yul\":1098:1103   */\n      dup2\n        /* \"#utility.yul\":1080:1104   */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1075:1078   */\n      dup3\n        /* \"#utility.yul\":1068:1105   */\n      mstore\n        /* \"#utility.yul\":993:1111   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1117:1298   */\n    tag_83:\n        /* \"#utility.yul\":1229:1291   */\n      tag_85\n        /* \"#utility.yul\":1285:1290   */\n      dup2\n        /* \"#utility.yul\":1229:1291   */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1224:1227   */\n      dup3\n        /* \"#utility.yul\":1217:1292   */\n      mstore\n        /* \"#utility.yul\":1117:1298   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1304:1422   */\n    tag_87:\n        /* \"#utility.yul\":1391:1415   */\n      tag_89\n        /* \"#utility.yul\":1409:1414   */\n      dup2\n        /* \"#utility.yul\":1391:1415   */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1386:1389   */\n      dup3\n        /* \"#utility.yul\":1379:1416   */\n      mstore\n        /* \"#utility.yul\":1304:1422   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1428:1650   */\n    tag_17:\n        /* \"#utility.yul\":1521:1525   */\n      0x00\n        /* \"#utility.yul\":1559:1561   */\n      0x20\n        /* \"#utility.yul\":1548:1557   */\n      dup3\n        /* \"#utility.yul\":1544:1562   */\n      add\n        /* \"#utility.yul\":1536:1562   */\n      swap1\n      pop\n        /* \"#utility.yul\":1572:1643   */\n      tag_92\n        /* \"#utility.yul\":1640:1641   */\n      0x00\n        /* \"#utility.yul\":1629:1638   */\n      dup4\n        /* \"#utility.yul\":1625:1642   */\n      add\n        /* \"#utility.yul\":1616:1622   */\n      dup5\n        /* \"#utility.yul\":1572:1643   */\n      tag_79\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1428:1650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1656:1988   */\n    tag_27:\n        /* \"#utility.yul\":1777:1781   */\n      0x00\n        /* \"#utility.yul\":1815:1817   */\n      0x40\n        /* \"#utility.yul\":1804:1813   */\n      dup3\n        /* \"#utility.yul\":1800:1818   */\n      add\n        /* \"#utility.yul\":1792:1818   */\n      swap1\n      pop\n        /* \"#utility.yul\":1828:1899   */\n      tag_94\n        /* \"#utility.yul\":1896:1897   */\n      0x00\n        /* \"#utility.yul\":1885:1894   */\n      dup4\n        /* \"#utility.yul\":1881:1898   */\n      add\n        /* \"#utility.yul\":1872:1878   */\n      dup6\n        /* \"#utility.yul\":1828:1899   */\n      tag_79\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1909:1981   */\n      tag_95\n        /* \"#utility.yul\":1977:1979   */\n      0x20\n        /* \"#utility.yul\":1966:1975   */\n      dup4\n        /* \"#utility.yul\":1962:1980   */\n      add\n        /* \"#utility.yul\":1953:1959   */\n      dup5\n        /* \"#utility.yul\":1909:1981   */\n      tag_87\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1656:1988   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2266   */\n    tag_14:\n        /* \"#utility.yul\":2112:2116   */\n      0x00\n        /* \"#utility.yul\":2150:2152   */\n      0x20\n        /* \"#utility.yul\":2139:2148   */\n      dup3\n        /* \"#utility.yul\":2135:2153   */\n      add\n        /* \"#utility.yul\":2127:2153   */\n      swap1\n      pop\n        /* \"#utility.yul\":2163:2259   */\n      tag_97\n        /* \"#utility.yul\":2256:2257   */\n      0x00\n        /* \"#utility.yul\":2245:2254   */\n      dup4\n        /* \"#utility.yul\":2241:2258   */\n      add\n        /* \"#utility.yul\":2232:2238   */\n      dup5\n        /* \"#utility.yul\":2163:2259   */\n      tag_83\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1994:2266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2272:2494   */\n    tag_10:\n        /* \"#utility.yul\":2365:2369   */\n      0x00\n        /* \"#utility.yul\":2403:2405   */\n      0x20\n        /* \"#utility.yul\":2392:2401   */\n      dup3\n        /* \"#utility.yul\":2388:2406   */\n      add\n        /* \"#utility.yul\":2380:2406   */\n      swap1\n      pop\n        /* \"#utility.yul\":2416:2487   */\n      tag_99\n        /* \"#utility.yul\":2484:2485   */\n      0x00\n        /* \"#utility.yul\":2473:2482   */\n      dup4\n        /* \"#utility.yul\":2469:2486   */\n      add\n        /* \"#utility.yul\":2460:2466   */\n      dup5\n        /* \"#utility.yul\":2416:2487   */\n      tag_87\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2272:2494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2581:2886   */\n    tag_53:\n        /* \"#utility.yul\":2621:2624   */\n      0x00\n        /* \"#utility.yul\":2640:2660   */\n      tag_103\n        /* \"#utility.yul\":2658:2659   */\n      dup3\n        /* \"#utility.yul\":2640:2660   */\n      tag_90\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2635:2660   */\n      swap2\n      pop\n        /* \"#utility.yul\":2674:2694   */\n      tag_104\n        /* \"#utility.yul\":2692:2693   */\n      dup4\n        /* \"#utility.yul\":2674:2694   */\n      tag_90\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2669:2694   */\n      swap3\n      pop\n        /* \"#utility.yul\":2828:2829   */\n      dup3\n        /* \"#utility.yul\":2760:2826   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2756:2830   */\n      sub\n        /* \"#utility.yul\":2753:2754   */\n      dup3\n        /* \"#utility.yul\":2750:2831   */\n      gt\n        /* \"#utility.yul\":2747:2854   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":2834:2852   */\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2747:2854   */\n    tag_105:\n        /* \"#utility.yul\":2878:2879   */\n      dup3\n        /* \"#utility.yul\":2875:2876   */\n      dup3\n        /* \"#utility.yul\":2871:2880   */\n      add\n        /* \"#utility.yul\":2864:2880   */\n      swap1\n      pop\n        /* \"#utility.yul\":2581:2886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2892:3077   */\n    tag_51:\n        /* \"#utility.yul\":2932:2933   */\n      0x00\n        /* \"#utility.yul\":2949:2969   */\n      tag_109\n        /* \"#utility.yul\":2967:2968   */\n      dup3\n        /* \"#utility.yul\":2949:2969   */\n      tag_90\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2944:2969   */\n      swap2\n      pop\n        /* \"#utility.yul\":2983:3003   */\n      tag_110\n        /* \"#utility.yul\":3001:3002   */\n      dup4\n        /* \"#utility.yul\":2983:3003   */\n      tag_90\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2978:3003   */\n      swap3\n      pop\n        /* \"#utility.yul\":3022:3023   */\n      dup3\n        /* \"#utility.yul\":3012:3047   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":3027:3045   */\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3012:3047   */\n    tag_111:\n        /* \"#utility.yul\":3069:3070   */\n      dup3\n        /* \"#utility.yul\":3066:3067   */\n      dup3\n        /* \"#utility.yul\":3062:3071   */\n      div\n        /* \"#utility.yul\":3057:3071   */\n      swap1\n      pop\n        /* \"#utility.yul\":2892:3077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3083:3179   */\n    tag_82:\n        /* \"#utility.yul\":3120:3127   */\n      0x00\n        /* \"#utility.yul\":3149:3173   */\n      tag_115\n        /* \"#utility.yul\":3167:3172   */\n      dup3\n        /* \"#utility.yul\":3149:3173   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3138:3173   */\n      swap1\n      pop\n        /* \"#utility.yul\":3083:3179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3185:3311   */\n    tag_116:\n        /* \"#utility.yul\":3222:3229   */\n      0x00\n        /* \"#utility.yul\":3262:3304   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3255:3260   */\n      dup3\n        /* \"#utility.yul\":3251:3305   */\n      and\n        /* \"#utility.yul\":3240:3305   */\n      swap1\n      pop\n        /* \"#utility.yul\":3185:3311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3317:3394   */\n    tag_90:\n        /* \"#utility.yul\":3354:3361   */\n      0x00\n        /* \"#utility.yul\":3383:3388   */\n      dup2\n        /* \"#utility.yul\":3372:3388   */\n      swap1\n      pop\n        /* \"#utility.yul\":3317:3394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3400:3551   */\n    tag_86:\n        /* \"#utility.yul\":3475:3484   */\n      0x00\n        /* \"#utility.yul\":3508:3545   */\n      tag_120\n        /* \"#utility.yul\":3539:3544   */\n      dup3\n        /* \"#utility.yul\":3508:3545   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3495:3545   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3557:3683   */\n    tag_121:\n        /* \"#utility.yul\":3607:3616   */\n      0x00\n        /* \"#utility.yul\":3640:3677   */\n      tag_123\n        /* \"#utility.yul\":3671:3676   */\n      dup3\n        /* \"#utility.yul\":3640:3677   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3627:3677   */\n      swap1\n      pop\n        /* \"#utility.yul\":3557:3683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3689:3802   */\n    tag_124:\n        /* \"#utility.yul\":3739:3748   */\n      0x00\n        /* \"#utility.yul\":3772:3796   */\n      tag_126\n        /* \"#utility.yul\":3790:3795   */\n      dup3\n        /* \"#utility.yul\":3772:3796   */\n      tag_116\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3759:3796   */\n      swap1\n      pop\n        /* \"#utility.yul\":3689:3802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3808:4041   */\n    tag_36:\n        /* \"#utility.yul\":3847:3850   */\n      0x00\n        /* \"#utility.yul\":3870:3894   */\n      tag_128\n        /* \"#utility.yul\":3888:3893   */\n      dup3\n        /* \"#utility.yul\":3870:3894   */\n      tag_90\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3861:3894   */\n      swap2\n      pop\n        /* \"#utility.yul\":3916:3982   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3909:3914   */\n      dup3\n        /* \"#utility.yul\":3906:3983   */\n      eq\n        /* \"#utility.yul\":3903:4006   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":3986:4004   */\n      tag_130\n      tag_107\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3903:4006   */\n    tag_129:\n        /* \"#utility.yul\":4033:4034   */\n      0x01\n        /* \"#utility.yul\":4026:4031   */\n      dup3\n        /* \"#utility.yul\":4022:4035   */\n      add\n        /* \"#utility.yul\":4015:4035   */\n      swap1\n      pop\n        /* \"#utility.yul\":3808:4041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4047:4223   */\n    tag_45:\n        /* \"#utility.yul\":4079:4080   */\n      0x00\n        /* \"#utility.yul\":4096:4116   */\n      tag_132\n        /* \"#utility.yul\":4114:4115   */\n      dup3\n        /* \"#utility.yul\":4096:4116   */\n      tag_90\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4091:4116   */\n      swap2\n      pop\n        /* \"#utility.yul\":4130:4150   */\n      tag_133\n        /* \"#utility.yul\":4148:4149   */\n      dup4\n        /* \"#utility.yul\":4130:4150   */\n      tag_90\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4125:4150   */\n      swap3\n      pop\n        /* \"#utility.yul\":4169:4170   */\n      dup3\n        /* \"#utility.yul\":4159:4194   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":4174:4192   */\n      tag_135\n      tag_113\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":4159:4194   */\n    tag_134:\n        /* \"#utility.yul\":4215:4216   */\n      dup3\n        /* \"#utility.yul\":4212:4213   */\n      dup3\n        /* \"#utility.yul\":4208:4217   */\n      mod\n        /* \"#utility.yul\":4203:4217   */\n      swap1\n      pop\n        /* \"#utility.yul\":4047:4223   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4229:4409   */\n    tag_107:\n        /* \"#utility.yul\":4277:4354   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4274:4275   */\n      0x00\n        /* \"#utility.yul\":4267:4355   */\n      mstore\n        /* \"#utility.yul\":4374:4378   */\n      0x11\n        /* \"#utility.yul\":4371:4372   */\n      0x04\n        /* \"#utility.yul\":4364:4379   */\n      mstore\n        /* \"#utility.yul\":4398:4402   */\n      0x24\n        /* \"#utility.yul\":4395:4396   */\n      0x00\n        /* \"#utility.yul\":4388:4403   */\n      revert\n        /* \"#utility.yul\":4415:4595   */\n    tag_113:\n        /* \"#utility.yul\":4463:4540   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4460:4461   */\n      0x00\n        /* \"#utility.yul\":4453:4541   */\n      mstore\n        /* \"#utility.yul\":4560:4564   */\n      0x12\n        /* \"#utility.yul\":4557:4558   */\n      0x04\n        /* \"#utility.yul\":4550:4565   */\n      mstore\n        /* \"#utility.yul\":4584:4588   */\n      0x24\n        /* \"#utility.yul\":4581:4582   */\n      0x00\n        /* \"#utility.yul\":4574:4589   */\n      revert\n        /* \"#utility.yul\":4724:4841   */\n    tag_73:\n        /* \"#utility.yul\":4833:4834   */\n      0x00\n        /* \"#utility.yul\":4830:4831   */\n      dup1\n        /* \"#utility.yul\":4823:4835   */\n      revert\n        /* \"#utility.yul\":4847:4969   */\n    tag_65:\n        /* \"#utility.yul\":4920:4944   */\n      tag_142\n        /* \"#utility.yul\":4938:4943   */\n      dup2\n        /* \"#utility.yul\":4920:4944   */\n      tag_82\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4913:4918   */\n      dup2\n        /* \"#utility.yul\":4910:4945   */\n      eq\n        /* \"#utility.yul\":4900:4963   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":4959:4960   */\n      0x00\n        /* \"#utility.yul\":4956:4957   */\n      dup1\n        /* \"#utility.yul\":4949:4961   */\n      revert\n        /* \"#utility.yul\":4900:4963   */\n    tag_143:\n        /* \"#utility.yul\":4847:4969   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4975:5097   */\n    tag_69:\n        /* \"#utility.yul\":5048:5072   */\n      tag_145\n        /* \"#utility.yul\":5066:5071   */\n      dup2\n        /* \"#utility.yul\":5048:5072   */\n      tag_90\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":5041:5046   */\n      dup2\n        /* \"#utility.yul\":5038:5073   */\n      eq\n        /* \"#utility.yul\":5028:5091   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5084:5085   */\n      dup1\n        /* \"#utility.yul\":5077:5089   */\n      revert\n        /* \"#utility.yul\":5028:5091   */\n    tag_146:\n        /* \"#utility.yul\":4975:5097   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220227fe966505ebd59ccd4b88b1d76fb0b2489851cabf6ef3d2e4efdb667e9998e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_175": {
									"entryPoint": null,
									"id": 175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC721Enumerable_$146_fromMemory": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721Enumerable_$146_fromMemory": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721Enumerable_$146": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721Enumerable_$146": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1476:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:105:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "105:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "120:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "114:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "105:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "188:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721Enumerable_$146",
																	"nodeType": "YulIdentifier",
																	"src": "136:51:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "136:58:4"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721Enumerable_$146_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "73:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "81:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "89:5:4",
														"type": ""
													}
												],
												"src": "7:193:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "308:299:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "354:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "356:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "356:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "356:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "329:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "338:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "325:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "325:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "350:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "321:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "321:32:4"
															},
															"nodeType": "YulIf",
															"src": "318:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "447:153:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "462:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "476:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "466:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "491:99:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "562:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "573:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "558:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "558:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "582:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721Enumerable_$146_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "501:56:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:89:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "491:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721Enumerable_$146_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "278:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "289:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "301:6:4",
														"type": ""
													}
												],
												"src": "206:401:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "653:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "663:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "679:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "673:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "673:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "663:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "646:6:4",
														"type": ""
													}
												],
												"src": "613:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "778:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "760:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "760:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "721:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "731:7:4",
														"type": ""
													}
												],
												"src": "694:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "866:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "876:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "905:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "887:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "887:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "876:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721Enumerable_$146",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "848:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "858:7:4",
														"type": ""
													}
												],
												"src": "796:121:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "968:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "978:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "993:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1000:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "989:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "989:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "978:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "950:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "960:7:4",
														"type": ""
													}
												],
												"src": "923:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1144:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1161:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1164:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1154:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1055:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1267:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1284:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1287:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1277:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1178:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1369:104:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1451:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1460:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1463:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1453:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1453:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1453:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1392:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1442:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721Enumerable_$146",
																					"nodeType": "YulIdentifier",
																					"src": "1399:42:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1399:49:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1389:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:60:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1382:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1382:68:4"
															},
															"nodeType": "YulIf",
															"src": "1379:88:4"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721Enumerable_$146",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1362:5:4",
														"type": ""
													}
												],
												"src": "1301:172:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC721Enumerable_$146_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC721Enumerable_$146(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721Enumerable_$146_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721Enumerable_$146_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC721Enumerable_$146(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC721Enumerable_$146(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721Enumerable_$146(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516107bb3803806107bb8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b60008151905061008781610103565b92915050565b6000602082840312156100a3576100a26100fe565b5b60006100b184828501610078565b91505092915050565b60006100c5826100de565b9050919050565b60006100d7826100ba565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61010c816100cc565b811461011757600080fd5b50565b610692806101296000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806337c575931461003b578063caa093b71461006b575b600080fd5b61005560048036038101906100509190610357565b610089565b604051610062919061043d565b60405180910390f35b610073610233565b6040516100809190610422565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016100e591906103de565b60206040518083038186803b1580156100fd57600080fd5b505afa158015610111573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101359190610384565b9050600080600090505b828110156102285760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5987846040518363ffffffff1660e01b81526004016101a59291906103f9565b60206040518083038186803b1580156101bd57600080fd5b505afa1580156101d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f59190610384565b905061020081610257565b1561021457828061021090610551565b9350505b50808061022090610551565b91505061013f565b508092505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610263836102b3565b90506000600290505b8181116102a55760008185610281919061059a565b1415610292576000925050506102ae565b808061029d90610551565b91505061026c565b50600183119150505b919050565b6000600382111561031a57819050600060016002846102d291906104ae565b6102dc9190610458565b90505b818110156103145780915060028182856102f991906104ae565b6103039190610458565b61030d91906104ae565b90506102df565b50610328565b6000821461032757600190505b5b919050565b60008135905061033c8161062e565b92915050565b60008151905061035181610645565b92915050565b60006020828403121561036d5761036c610629565b5b600061037b8482850161032d565b91505092915050565b60006020828403121561039a57610399610629565b5b60006103a884828501610342565b91505092915050565b6103ba816104df565b82525050565b6103c98161051b565b82525050565b6103d881610511565b82525050565b60006020820190506103f360008301846103b1565b92915050565b600060408201905061040e60008301856103b1565b61041b60208301846103cf565b9392505050565b600060208201905061043760008301846103c0565b92915050565b600060208201905061045260008301846103cf565b92915050565b600061046382610511565b915061046e83610511565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104a3576104a26105cb565b5b828201905092915050565b60006104b982610511565b91506104c483610511565b9250826104d4576104d36105fa565b5b828204905092915050565b60006104ea826104f1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105268261052d565b9050919050565b60006105388261053f565b9050919050565b600061054a826104f1565b9050919050565b600061055c82610511565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561058f5761058e6105cb565b5b600182019050919050565b60006105a582610511565b91506105b083610511565b9250826105c0576105bf6105fa565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b610637816104df565b811461064257600080fd5b50565b61064e81610511565b811461065957600080fd5b5056fea2646970667358221220227fe966505ebd59ccd4b88b1d76fb0b2489851cabf6ef3d2e4efdb667e9998e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x7BB CODESIZE SUB DUP1 PUSH2 0x7BB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x11A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0xFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1 DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5 DUP3 PUSH2 0xDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7 DUP3 PUSH2 0xBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C DUP2 PUSH2 0xCC JUMP JUMPDEST DUP2 EQ PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x692 DUP1 PUSH2 0x129 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x37C57593 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCAA093B7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x422 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x111 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F745C59 DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5 SWAP3 SWAP2 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST SWAP1 POP PUSH2 0x200 DUP2 PUSH2 0x257 JUMP JUMPDEST ISZERO PUSH2 0x214 JUMPI DUP3 DUP1 PUSH2 0x210 SWAP1 PUSH2 0x551 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x220 SWAP1 PUSH2 0x551 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13F JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x263 DUP4 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST DUP2 DUP2 GT PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP2 DUP6 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x59A JUMP JUMPDEST EQ ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x2AE JUMP JUMPDEST DUP1 DUP1 PUSH2 0x29D SWAP1 PUSH2 0x551 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26C JUMP JUMPDEST POP PUSH1 0x1 DUP4 GT SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x31A JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x314 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST SWAP1 POP PUSH2 0x2DF JUMP JUMPDEST POP PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x327 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33C DUP2 PUSH2 0x62E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x351 DUP2 PUSH2 0x645 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36D JUMPI PUSH2 0x36C PUSH2 0x629 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B DUP5 DUP3 DUP6 ADD PUSH2 0x32D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39A JUMPI PUSH2 0x399 PUSH2 0x629 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A8 DUP5 DUP3 DUP6 ADD PUSH2 0x342 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3BA DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3C9 DUP2 PUSH2 0x51B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3D8 DUP2 PUSH2 0x511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x41B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x437 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x452 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x463 DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP2 POP PUSH2 0x46E DUP4 PUSH2 0x511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4A3 JUMPI PUSH2 0x4A2 PUSH2 0x5CB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B9 DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C4 DUP4 PUSH2 0x511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4D4 JUMPI PUSH2 0x4D3 PUSH2 0x5FA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x526 DUP3 PUSH2 0x52D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x538 DUP3 PUSH2 0x53F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54A DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55C DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x5CB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A5 DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B0 DUP4 PUSH2 0x511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5C0 JUMPI PUSH2 0x5BF PUSH2 0x5FA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x637 DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP2 EQ PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x64E DUP2 PUSH2 0x511 JUMP JUMPDEST DUP2 EQ PUSH2 0x659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH32 0xE966505EBD59CCD4B88B1D76FB0B2489851CABF6EF3D2E4EFDB667E9998E6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "142:1173:3:-:0;;;217:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;287:11;271:13;;:27;;;;;;;;;;;;;;;;;;217:89;142:1173;;7:193:4;89:5;120:6;114:13;105:22;;136:58;188:5;136:58;:::i;:::-;7:193;;;;:::o;206:401::-;301:6;350:2;338:9;329:7;325:23;321:32;318:119;;;356:79;;:::i;:::-;318:119;476:1;501:89;582:7;573:6;562:9;558:22;501:89;:::i;:::-;491:99;;447:153;206:401;;;;:::o;694:96::-;731:7;760:24;778:5;760:24;:::i;:::-;749:35;;694:96;;;:::o;796:121::-;858:7;887:24;905:5;887:24;:::i;:::-;876:35;;796:121;;;:::o;923:126::-;960:7;1000:42;993:5;989:54;978:65;;923:126;;;:::o;1178:117::-;1287:1;1284;1277:12;1301:172;1399:49;1442:5;1399:49;:::i;:::-;1392:5;1389:60;1379:88;;1463:1;1460;1453:12;1379:88;1301:172;:::o;142:1173:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isPrime_261": {
									"entryPoint": 599,
									"id": 261,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@myNFTContract_164": {
									"entryPoint": 563,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@specialNftsCount_223": {
									"entryPoint": 137,
									"id": 223,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sqrt_315": {
									"entryPoint": 691,
									"id": 315,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721Enumerable_$146_to_t_address_fromStack": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721Enumerable_$146__to_t_address__fromStack_reversed": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721Enumerable_$146_to_t_address": {
									"entryPoint": 1307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1483,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5100:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "225:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "240:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "234:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "283:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "256:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "256:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "193:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "201:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "209:5:4",
														"type": ""
													}
												],
												"src": "152:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "367:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "413:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "388:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "397:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "384:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "384:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "409:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "380:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:32:4"
															},
															"nodeType": "YulIf",
															"src": "377:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "506:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "521:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "525:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "550:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "585:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "596:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "581:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "581:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "605:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "560:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "560:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "550:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "337:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "348:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "360:6:4",
														"type": ""
													}
												],
												"src": "301:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "713:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "759:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "761:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "761:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "761:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "734:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "743:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "730:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "730:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:32:4"
															},
															"nodeType": "YulIf",
															"src": "723:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "852:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "867:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "881:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "871:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "896:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "942:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "953:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "938:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "938:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "962:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "906:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "896:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "683:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "694:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "706:6:4",
														"type": ""
													}
												],
												"src": "636:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1058:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1075:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1098:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1080:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1080:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1068:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1068:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1046:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1053:3:4",
														"type": ""
													}
												],
												"src": "993:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1207:91:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1224:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1285:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721Enumerable_$146_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1229:55:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:62:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1217:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:75:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1217:75:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721Enumerable_$146_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1195:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1202:3:4",
														"type": ""
													}
												],
												"src": "1117:181:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1369:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1386:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1409:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1391:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1391:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1379:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1379:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1379:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1357:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1364:3:4",
														"type": ""
													}
												],
												"src": "1304:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1548:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1559:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1536:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1616:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1629:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1640:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1625:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1625:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1572:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1572:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1572:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1498:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1510:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1521:4:4",
														"type": ""
													}
												],
												"src": "1428:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1782:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1792:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1804:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1800:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1792:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1872:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1885:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1896:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1881:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1881:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1828:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1828:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1953:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1966:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1977:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1962:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1909:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1746:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1758:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1766:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1777:4:4",
														"type": ""
													}
												],
												"src": "1656:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2117:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2127:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2139:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2150:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2135:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2127:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2232:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2245:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2256:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2241:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2241:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721Enumerable_$146_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2163:68:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:96:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2163:96:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721Enumerable_$146__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2089:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2101:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2112:4:4",
														"type": ""
													}
												],
												"src": "1994:272:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2370:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2380:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2392:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2403:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2388:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2388:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2380:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2460:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2473:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2484:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2469:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2469:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2416:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2416:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2416:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2342:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2354:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2365:4:4",
														"type": ""
													}
												],
												"src": "2272:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2540:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2550:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2566:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2560:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2560:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2550:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2533:6:4",
														"type": ""
													}
												],
												"src": "2500:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2625:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2635:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2658:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2640:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2640:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2635:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2669:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2692:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2674:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2674:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2669:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2832:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2834:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2834:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2834:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2753:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2760:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2828:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2756:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2750:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2750:81:4"
															},
															"nodeType": "YulIf",
															"src": "2747:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2864:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2875:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2878:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2864:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2612:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2615:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2621:3:4",
														"type": ""
													}
												],
												"src": "2581:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2934:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2944:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2967:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2949:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2944:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2978:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3001:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2983:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2978:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3025:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3027:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3027:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3027:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3022:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3015:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3015:9:4"
															},
															"nodeType": "YulIf",
															"src": "3012:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3057:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3066:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3069:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3062:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3057:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2923:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2926:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2932:1:4",
														"type": ""
													}
												],
												"src": "2892:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3128:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3138:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3167:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3149:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3138:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3110:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3120:7:4",
														"type": ""
													}
												],
												"src": "3083:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3230:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3240:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3255:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3262:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3251:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3240:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3212:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3222:7:4",
														"type": ""
													}
												],
												"src": "3185:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3362:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3372:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3383:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3372:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3344:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3354:7:4",
														"type": ""
													}
												],
												"src": "3317:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3485:66:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3495:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3539:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3508:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3508:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3495:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721Enumerable_$146_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3465:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3475:9:4",
														"type": ""
													}
												],
												"src": "3400:151:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3617:66:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3627:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3671:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3640:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3627:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3597:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3607:9:4",
														"type": ""
													}
												],
												"src": "3557:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:53:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3759:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3790:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3772:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3772:24:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3759:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3729:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3739:9:4",
														"type": ""
													}
												],
												"src": "3689:113:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3851:190:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3861:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3888:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3870:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3870:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3861:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3984:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3986:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3986:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3986:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3909:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3916:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3906:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3906:77:4"
															},
															"nodeType": "YulIf",
															"src": "3903:103:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4015:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4026:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4022:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4015:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3837:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3847:3:4",
														"type": ""
													}
												],
												"src": "3808:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4081:142:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4091:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4114:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4096:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4091:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4125:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4148:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4130:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4125:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4172:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4174:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4174:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4169:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4162:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:9:4"
															},
															"nodeType": "YulIf",
															"src": "4159:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4203:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4212:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4215:1:4"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "4208:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4208:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4203:1:4"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4070:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4073:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4079:1:4",
														"type": ""
													}
												],
												"src": "4047:176:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4257:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4274:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4277:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4267:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4267:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4371:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4374:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4364:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4364:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4395:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4398:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4388:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4388:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4388:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4229:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4443:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4460:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4453:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4453:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4453:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4557:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4560:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4550:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4550:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4550:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4581:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4584:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4574:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4574:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4574:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4415:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4690:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4707:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4710:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4700:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4700:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4700:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4601:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4813:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4830:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4823:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4823:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4724:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4890:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4947:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4956:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4959:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4949:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4949:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4949:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4913:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4938:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4920:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4920:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4910:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4910:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4903:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4903:43:4"
															},
															"nodeType": "YulIf",
															"src": "4900:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4883:5:4",
														"type": ""
													}
												],
												"src": "4847:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5018:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5075:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5084:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5087:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5077:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5077:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5077:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5041:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5066:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5048:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5048:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5038:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5038:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5031:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5031:43:4"
															},
															"nodeType": "YulIf",
															"src": "5028:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5011:5:4",
														"type": ""
													}
												],
												"src": "4975:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721Enumerable_$146_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721Enumerable_$146_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721Enumerable_$146__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721Enumerable_$146_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC721Enumerable_$146_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806337c575931461003b578063caa093b71461006b575b600080fd5b61005560048036038101906100509190610357565b610089565b604051610062919061043d565b60405180910390f35b610073610233565b6040516100809190610422565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016100e591906103de565b60206040518083038186803b1580156100fd57600080fd5b505afa158015610111573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101359190610384565b9050600080600090505b828110156102285760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5987846040518363ffffffff1660e01b81526004016101a59291906103f9565b60206040518083038186803b1580156101bd57600080fd5b505afa1580156101d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f59190610384565b905061020081610257565b1561021457828061021090610551565b9350505b50808061022090610551565b91505061013f565b508092505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610263836102b3565b90506000600290505b8181116102a55760008185610281919061059a565b1415610292576000925050506102ae565b808061029d90610551565b91505061026c565b50600183119150505b919050565b6000600382111561031a57819050600060016002846102d291906104ae565b6102dc9190610458565b90505b818110156103145780915060028182856102f991906104ae565b6103039190610458565b61030d91906104ae565b90506102df565b50610328565b6000821461032757600190505b5b919050565b60008135905061033c8161062e565b92915050565b60008151905061035181610645565b92915050565b60006020828403121561036d5761036c610629565b5b600061037b8482850161032d565b91505092915050565b60006020828403121561039a57610399610629565b5b60006103a884828501610342565b91505092915050565b6103ba816104df565b82525050565b6103c98161051b565b82525050565b6103d881610511565b82525050565b60006020820190506103f360008301846103b1565b92915050565b600060408201905061040e60008301856103b1565b61041b60208301846103cf565b9392505050565b600060208201905061043760008301846103c0565b92915050565b600060208201905061045260008301846103cf565b92915050565b600061046382610511565b915061046e83610511565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104a3576104a26105cb565b5b828201905092915050565b60006104b982610511565b91506104c483610511565b9250826104d4576104d36105fa565b5b828204905092915050565b60006104ea826104f1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105268261052d565b9050919050565b60006105388261053f565b9050919050565b600061054a826104f1565b9050919050565b600061055c82610511565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561058f5761058e6105cb565b5b600182019050919050565b60006105a582610511565b91506105b083610511565b9250826105c0576105bf6105fa565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b610637816104df565b811461064257600080fd5b50565b61064e81610511565b811461065957600080fd5b5056fea2646970667358221220227fe966505ebd59ccd4b88b1d76fb0b2489851cabf6ef3d2e4efdb667e9998e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x37C57593 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCAA093B7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x422 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x111 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F745C59 DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5 SWAP3 SWAP2 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST SWAP1 POP PUSH2 0x200 DUP2 PUSH2 0x257 JUMP JUMPDEST ISZERO PUSH2 0x214 JUMPI DUP3 DUP1 PUSH2 0x210 SWAP1 PUSH2 0x551 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x220 SWAP1 PUSH2 0x551 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13F JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x263 DUP4 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST DUP2 DUP2 GT PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP2 DUP6 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x59A JUMP JUMPDEST EQ ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x2AE JUMP JUMPDEST DUP1 DUP1 PUSH2 0x29D SWAP1 PUSH2 0x551 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26C JUMP JUMPDEST POP PUSH1 0x1 DUP4 GT SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x31A JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x314 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST SWAP1 POP PUSH2 0x2DF JUMP JUMPDEST POP PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x327 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33C DUP2 PUSH2 0x62E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x351 DUP2 PUSH2 0x645 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36D JUMPI PUSH2 0x36C PUSH2 0x629 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B DUP5 DUP3 DUP6 ADD PUSH2 0x32D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39A JUMPI PUSH2 0x399 PUSH2 0x629 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A8 DUP5 DUP3 DUP6 ADD PUSH2 0x342 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3BA DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3C9 DUP2 PUSH2 0x51B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3D8 DUP2 PUSH2 0x511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x41B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x437 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x452 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x463 DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP2 POP PUSH2 0x46E DUP4 PUSH2 0x511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4A3 JUMPI PUSH2 0x4A2 PUSH2 0x5CB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B9 DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C4 DUP4 PUSH2 0x511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4D4 JUMPI PUSH2 0x4D3 PUSH2 0x5FA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x526 DUP3 PUSH2 0x52D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x538 DUP3 PUSH2 0x53F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54A DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55C DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x5CB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A5 DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B0 DUP4 PUSH2 0x511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5C0 JUMPI PUSH2 0x5BF PUSH2 0x5FA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x637 DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP2 EQ PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x64E DUP2 PUSH2 0x511 JUMP JUMPDEST DUP2 EQ PUSH2 0x659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH32 0xE966505EBD59CCD4B88B1D76FB0B2489851CABF6EF3D2E4EFDB667E9998E6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "142:1173:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;314:442;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;170:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;314:442;379:7;399:17;419:13;;;;;;;;;;:23;;;443:6;419:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;399:51;;461:24;501:9;513:1;501:13;;496:219;520:9;516:1;:13;496:219;;;551:16;570:13;;;;;;;;;;;:33;;;604:6;612:1;570:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;551:63;;632:17;640:8;632:7;:17::i;:::-;629:75;;;670:18;;;;;:::i;:::-;;;;629:75;536:179;531:3;;;;;:::i;:::-;;;;496:219;;;;732:16;725:23;;;;314:442;;;:::o;170:38::-;;;;;;;;;;;;:::o;764:228::-;818:4;835:9;847:10;852:4;847;:10::i;:::-;835:22;;872:9;884:1;872:13;;868:89;892:1;887;:6;868:89;;930:1;925;918:4;:8;;;;:::i;:::-;:13;915:30;;;940:5;933:12;;;;;;915:30;895:3;;;;;:::i;:::-;;;;868:89;;;;983:1;976:4;:8;969:15;;;764:228;;;;:::o;1000:312::-;1048:9;1078:1;1074;:5;1070:235;;;1100:1;1096:5;;1116:9;1136:1;1132;1128;:5;;;;:::i;:::-;:9;;;;:::i;:::-;1116:21;;1152:92;1163:1;1159;:5;1152:92;;;1189:1;1185:5;;1227:1;1222;1218;1214;:5;;;;:::i;:::-;:9;;;;:::i;:::-;1213:15;;;;:::i;:::-;1209:19;;1152:92;;;1081:174;1070:235;;;1270:1;1265;:6;1261:44;;1292:1;1288:5;;1261:44;1070:235;1000:312;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;152:143;;;;:::o;301:329::-;360:6;409:2;397:9;388:7;384:23;380:32;377:119;;;415:79;;:::i;:::-;377:119;535:1;560:53;605:7;596:6;585:9;581:22;560:53;:::i;:::-;550:63;;506:117;301:329;;;;:::o;636:351::-;706:6;755:2;743:9;734:7;730:23;726:32;723:119;;;761:79;;:::i;:::-;723:119;881:1;906:64;962:7;953:6;942:9;938:22;906:64;:::i;:::-;896:74;;852:128;636:351;;;;:::o;993:118::-;1080:24;1098:5;1080:24;:::i;:::-;1075:3;1068:37;993:118;;:::o;1117:181::-;1229:62;1285:5;1229:62;:::i;:::-;1224:3;1217:75;1117:181;;:::o;1304:118::-;1391:24;1409:5;1391:24;:::i;:::-;1386:3;1379:37;1304:118;;:::o;1428:222::-;1521:4;1559:2;1548:9;1544:18;1536:26;;1572:71;1640:1;1629:9;1625:17;1616:6;1572:71;:::i;:::-;1428:222;;;;:::o;1656:332::-;1777:4;1815:2;1804:9;1800:18;1792:26;;1828:71;1896:1;1885:9;1881:17;1872:6;1828:71;:::i;:::-;1909:72;1977:2;1966:9;1962:18;1953:6;1909:72;:::i;:::-;1656:332;;;;;:::o;1994:272::-;2112:4;2150:2;2139:9;2135:18;2127:26;;2163:96;2256:1;2245:9;2241:17;2232:6;2163:96;:::i;:::-;1994:272;;;;:::o;2272:222::-;2365:4;2403:2;2392:9;2388:18;2380:26;;2416:71;2484:1;2473:9;2469:17;2460:6;2416:71;:::i;:::-;2272:222;;;;:::o;2581:305::-;2621:3;2640:20;2658:1;2640:20;:::i;:::-;2635:25;;2674:20;2692:1;2674:20;:::i;:::-;2669:25;;2828:1;2760:66;2756:74;2753:1;2750:81;2747:107;;;2834:18;;:::i;:::-;2747:107;2878:1;2875;2871:9;2864:16;;2581:305;;;;:::o;2892:185::-;2932:1;2949:20;2967:1;2949:20;:::i;:::-;2944:25;;2983:20;3001:1;2983:20;:::i;:::-;2978:25;;3022:1;3012:35;;3027:18;;:::i;:::-;3012:35;3069:1;3066;3062:9;3057:14;;2892:185;;;;:::o;3083:96::-;3120:7;3149:24;3167:5;3149:24;:::i;:::-;3138:35;;3083:96;;;:::o;3185:126::-;3222:7;3262:42;3255:5;3251:54;3240:65;;3185:126;;;:::o;3317:77::-;3354:7;3383:5;3372:16;;3317:77;;;:::o;3400:151::-;3475:9;3508:37;3539:5;3508:37;:::i;:::-;3495:50;;3400:151;;;:::o;3557:126::-;3607:9;3640:37;3671:5;3640:37;:::i;:::-;3627:50;;3557:126;;;:::o;3689:113::-;3739:9;3772:24;3790:5;3772:24;:::i;:::-;3759:37;;3689:113;;;:::o;3808:233::-;3847:3;3870:24;3888:5;3870:24;:::i;:::-;3861:33;;3916:66;3909:5;3906:77;3903:103;;;3986:18;;:::i;:::-;3903:103;4033:1;4026:5;4022:13;4015:20;;3808:233;;;:::o;4047:176::-;4079:1;4096:20;4114:1;4096:20;:::i;:::-;4091:25;;4130:20;4148:1;4130:20;:::i;:::-;4125:25;;4169:1;4159:35;;4174:18;;:::i;:::-;4159:35;4215:1;4212;4208:9;4203:14;;4047:176;;;;:::o;4229:180::-;4277:77;4274:1;4267:88;4374:4;4371:1;4364:15;4398:4;4395:1;4388:15;4415:180;4463:77;4460:1;4453:88;4560:4;4557:1;4550:15;4584:4;4581:1;4574:15;4724:117;4833:1;4830;4823:12;4847:122;4920:24;4938:5;4920:24;:::i;:::-;4913:5;4910:35;4900:63;;4959:1;4956;4949:12;4900:63;4847:122;:::o;4975:::-;5048:24;5066:5;5048:24;:::i;:::-;5041:5;5038:35;5028:63;;5087:1;5084;5077:12;5028:63;4975:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "336400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"myNFTContract()": "2597",
								"specialNftsCount(address)": "infinite"
							},
							"internal": {
								"isPrime(uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 142,
									"end": 1315,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 217,
									"end": 306,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 217,
									"end": 306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 217,
									"end": 306,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 217,
									"end": 306,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 217,
									"end": 306,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 217,
									"end": 306,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 217,
									"end": 306,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 217,
									"end": 306,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 217,
									"end": 306,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 287,
									"end": 298,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 271,
									"end": 284,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 284,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 271,
									"end": 298,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 271,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 271,
									"end": 298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 271,
									"end": 298,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 217,
									"end": 306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 200,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 200,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 89,
									"end": 94,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 126,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 114,
									"end": 127,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 105,
									"end": 127,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 105,
									"end": 127,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 136,
									"end": 194,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 188,
									"end": 193,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 136,
									"end": 194,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 136,
									"end": 194,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 136,
									"end": 194,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 136,
									"end": 194,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7,
									"end": 200,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7,
									"end": 200,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 200,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 200,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 200,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 206,
									"end": 607,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 206,
									"end": 607,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 301,
									"end": 307,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 352,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 338,
									"end": 347,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 329,
									"end": 336,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 325,
									"end": 348,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 321,
									"end": 353,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 318,
									"end": 437,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 318,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 318,
									"end": 437,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 356,
									"end": 435,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 356,
									"end": 435,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 356,
									"end": 435,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 356,
									"end": 435,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 356,
									"end": 435,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 318,
									"end": 437,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 318,
									"end": 437,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 476,
									"end": 477,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 590,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 582,
									"end": 589,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 573,
									"end": 579,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 562,
									"end": 571,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 558,
									"end": 580,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 501,
									"end": 590,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 501,
									"end": 590,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 501,
									"end": 590,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 501,
									"end": 590,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 491,
									"end": 590,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 491,
									"end": 590,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 447,
									"end": 600,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 206,
									"end": 607,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 206,
									"end": 607,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 206,
									"end": 607,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 206,
									"end": 607,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 206,
									"end": 607,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 694,
									"end": 790,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 694,
									"end": 790,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 784,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 778,
									"end": 783,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 760,
									"end": 784,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 760,
									"end": 784,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 760,
									"end": 784,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 760,
									"end": 784,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 749,
									"end": 784,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 749,
									"end": 784,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 790,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 694,
									"end": 790,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 694,
									"end": 790,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 790,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 796,
									"end": 917,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 796,
									"end": 917,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 858,
									"end": 865,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 887,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 905,
									"end": 910,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 887,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 887,
									"end": 911,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 887,
									"end": 911,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 887,
									"end": 911,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 876,
									"end": 911,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 876,
									"end": 911,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 796,
									"end": 917,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 796,
									"end": 917,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 796,
									"end": 917,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 796,
									"end": 917,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 923,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 923,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 960,
									"end": 967,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1000,
									"end": 1042,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 993,
									"end": 998,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 989,
									"end": 1043,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 978,
									"end": 1043,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 978,
									"end": 1043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1049,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1049,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1049,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1049,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1178,
									"end": 1295,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1178,
									"end": 1295,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1284,
									"end": 1285,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1289,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1301,
									"end": 1473,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1301,
									"end": 1473,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1399,
									"end": 1448,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1442,
									"end": 1447,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1399,
									"end": 1448,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1399,
									"end": 1448,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1399,
									"end": 1448,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1399,
									"end": 1448,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1392,
									"end": 1397,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1449,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1379,
									"end": 1467,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1379,
									"end": 1467,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1464,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1460,
									"end": 1461,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1453,
									"end": 1465,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1379,
									"end": 1467,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1379,
									"end": 1467,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1301,
									"end": 1473,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1301,
									"end": 1473,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 1315,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220227fe966505ebd59ccd4b88b1d76fb0b2489851cabf6ef3d2e4efdb667e9998e64736f6c63430008070033",
									".code": [
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "37C57593"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "CAA093B7"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 142,
											"end": 1315,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 314,
											"end": 756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 379,
											"end": 386,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 416,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 419,
											"end": 432,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 432,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 419,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 419,
											"end": 432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 419,
											"end": 442,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 419,
											"end": 442,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 419,
											"end": 442,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 419,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 419,
											"end": 450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 399,
											"end": 450,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 399,
											"end": 450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 461,
											"end": 485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 510,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 496,
											"end": 715,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 496,
											"end": 715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 520,
											"end": 529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 516,
											"end": 517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 516,
											"end": 529,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 496,
											"end": 715,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 496,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 496,
											"end": 715,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 551,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 583,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 570,
											"end": 583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 583,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 583,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 570,
											"end": 583,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 570,
											"end": 603,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 570,
											"end": 603,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 570,
											"end": 603,
											"name": "PUSH",
											"source": 3,
											"value": "2F745C59"
										},
										{
											"begin": 604,
											"end": 610,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 612,
											"end": 613,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 570,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 570,
											"end": 614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 551,
											"end": 614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 551,
											"end": 614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 632,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 640,
											"end": 648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 632,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 632,
											"end": 649,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 649,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 632,
											"end": 649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 704,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 629,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 629,
											"end": 704,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 670,
											"end": 688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 670,
											"end": 688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 670,
											"end": 688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 670,
											"end": 688,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 670,
											"end": 688,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 670,
											"end": 688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 670,
											"end": 688,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 670,
											"end": 688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 670,
											"end": 688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 629,
											"end": 704,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 629,
											"end": 704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 536,
											"end": 715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 531,
											"end": 534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 531,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 531,
											"end": 534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 531,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 531,
											"end": 534,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 534,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 531,
											"end": 534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 534,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 531,
											"end": 534,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 534,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 496,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 496,
											"end": 715,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 496,
											"end": 715,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 496,
											"end": 715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 496,
											"end": 715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 732,
											"end": 748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 725,
											"end": 748,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 725,
											"end": 748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 725,
											"end": 748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 725,
											"end": 748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 314,
											"end": 756,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 170,
											"end": 208,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 170,
											"end": 208,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 764,
											"end": 992,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 764,
											"end": 992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 818,
											"end": 822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 844,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 847,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 852,
											"end": 856,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 847,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 847,
											"end": 857,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 847,
											"end": 857,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 847,
											"end": 857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 835,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 835,
											"end": 857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 872,
											"end": 881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 872,
											"end": 885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 872,
											"end": 885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 957,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 868,
											"end": 957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 892,
											"end": 893,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 887,
											"end": 893,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 868,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 868,
											"end": 957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 930,
											"end": 931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 926,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 918,
											"end": 922,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 918,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 918,
											"end": 926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 918,
											"end": 926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 918,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 918,
											"end": 926,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 918,
											"end": 926,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 918,
											"end": 926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 918,
											"end": 931,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 915,
											"end": 945,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 915,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 915,
											"end": 945,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 945,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 933,
											"end": 945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 933,
											"end": 945,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 915,
											"end": 945,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 915,
											"end": 945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 898,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 898,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 895,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 895,
											"end": 898,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 898,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 895,
											"end": 898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 898,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 868,
											"end": 957,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 957,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 868,
											"end": 957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 983,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 976,
											"end": 980,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 976,
											"end": 984,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 969,
											"end": 984,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 969,
											"end": 984,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 969,
											"end": 984,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 764,
											"end": 992,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 764,
											"end": 992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 764,
											"end": 992,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 764,
											"end": 992,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 764,
											"end": 992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 764,
											"end": 992,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1000,
											"end": 1312,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1079,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1305,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1070,
											"end": 1305,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1125,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1132,
											"end": 1133,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1128,
											"end": 1129,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1137,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1244,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1152,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1163,
											"end": 1164,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1159,
											"end": 1164,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1244,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1152,
											"end": 1244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1190,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1222,
											"end": 1223,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1152,
											"end": 1244,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1244,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1152,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1070,
											"end": 1305,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1305,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1070,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1261,
											"end": 1305,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1292,
											"end": 1293,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1288,
											"end": 1293,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1293,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1305,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1261,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1305,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1070,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1312,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 209,
											"end": 214,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 234,
											"end": 247,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 225,
											"end": 247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 630,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 301,
											"end": 630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 360,
											"end": 366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 411,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 397,
											"end": 406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 388,
											"end": 395,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 384,
											"end": 407,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 380,
											"end": 412,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 377,
											"end": 496,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 377,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 377,
											"end": 496,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 377,
											"end": 496,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 377,
											"end": 496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 605,
											"end": 612,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 596,
											"end": 602,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 585,
											"end": 594,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 581,
											"end": 603,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 560,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 560,
											"end": 613,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 613,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 560,
											"end": 613,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 550,
											"end": 613,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 550,
											"end": 613,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 506,
											"end": 623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 301,
											"end": 630,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 301,
											"end": 630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 301,
											"end": 630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 301,
											"end": 630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 301,
											"end": 630,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 636,
											"end": 987,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 636,
											"end": 987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 706,
											"end": 712,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 757,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 752,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 734,
											"end": 741,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 730,
											"end": 753,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 726,
											"end": 758,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 723,
											"end": 842,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 723,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 723,
											"end": 842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 761,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 761,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 761,
											"end": 840,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 761,
											"end": 840,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 761,
											"end": 840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 723,
											"end": 842,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 723,
											"end": 842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 962,
											"end": 969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 953,
											"end": 959,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 942,
											"end": 951,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 938,
											"end": 960,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 896,
											"end": 970,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 896,
											"end": 970,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 852,
											"end": 980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 636,
											"end": 987,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 636,
											"end": 987,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 636,
											"end": 987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 636,
											"end": 987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 636,
											"end": 987,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1117,
											"end": 1298,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1117,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1285,
											"end": 1290,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1229,
											"end": 1291,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1229,
											"end": 1291,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1229,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1227,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1298,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1298,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1298,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1304,
											"end": 1422,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1304,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1391,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1391,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1391,
											"end": 1415,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1391,
											"end": 1415,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1391,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1389,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1416,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1304,
											"end": 1422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1304,
											"end": 1422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1304,
											"end": 1422,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1428,
											"end": 1650,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1428,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1521,
											"end": 1525,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1561,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1557,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1572,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1638,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1625,
											"end": 1642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 1622,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1572,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1572,
											"end": 1643,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1572,
											"end": 1643,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1572,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1650,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1650,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1656,
											"end": 1988,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1656,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1813,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1818,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1828,
											"end": 1899,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1828,
											"end": 1899,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1828,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1977,
											"end": 1979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 1975,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 1980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1909,
											"end": 1981,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1909,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1909,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1656,
											"end": 1988,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1656,
											"end": 1988,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1656,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1656,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1656,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1656,
											"end": 1988,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1994,
											"end": 2266,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1994,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2148,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2153,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2256,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2258,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2232,
											"end": 2238,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2163,
											"end": 2259,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2163,
											"end": 2259,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2163,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2266,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2266,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2405,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2392,
											"end": 2401,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2486,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2581,
											"end": 2886,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2581,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2658,
											"end": 2659,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2640,
											"end": 2660,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2640,
											"end": 2660,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2640,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2635,
											"end": 2660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2635,
											"end": 2660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2674,
											"end": 2694,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2674,
											"end": 2694,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2674,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2694,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2826,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2756,
											"end": 2830,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2750,
											"end": 2831,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2747,
											"end": 2854,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2747,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2747,
											"end": 2854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2747,
											"end": 2854,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2747,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2876,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2871,
											"end": 2880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 2880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 2880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2886,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2886,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2886,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2886,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2892,
											"end": 3077,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2892,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2969,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3001,
											"end": 3002,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2983,
											"end": 3003,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2983,
											"end": 3003,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2983,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2978,
											"end": 3003,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2978,
											"end": 3003,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3022,
											"end": 3023,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3012,
											"end": 3047,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3047,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3012,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3071,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 3077,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 3077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 3077,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3083,
											"end": 3179,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3083,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3120,
											"end": 3127,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3149,
											"end": 3173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3149,
											"end": 3173,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3149,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3138,
											"end": 3173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3138,
											"end": 3173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3179,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3185,
											"end": 3311,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3185,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3222,
											"end": 3229,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3304,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3255,
											"end": 3260,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3251,
											"end": 3305,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3311,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3317,
											"end": 3394,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3317,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3361,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3394,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3394,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3400,
											"end": 3551,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3400,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3508,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3508,
											"end": 3545,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3508,
											"end": 3545,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3508,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3551,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3551,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3557,
											"end": 3683,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3557,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3607,
											"end": 3616,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3671,
											"end": 3676,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3640,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3640,
											"end": 3677,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3640,
											"end": 3677,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3640,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 3677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 3677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3683,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3683,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3683,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3689,
											"end": 3802,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3689,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3772,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3772,
											"end": 3796,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3772,
											"end": 3796,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3772,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3759,
											"end": 3796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3759,
											"end": 3796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3802,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3802,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3808,
											"end": 4041,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3808,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3850,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3888,
											"end": 3893,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3870,
											"end": 3894,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3870,
											"end": 3894,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3870,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3916,
											"end": 3982,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 3983,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 4006,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3903,
											"end": 4006,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 4006,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3903,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4033,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4026,
											"end": 4031,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4035,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4015,
											"end": 4035,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4015,
											"end": 4035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 4041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 4041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 4041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 4041,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4047,
											"end": 4223,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4047,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4079,
											"end": 4080,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4114,
											"end": 4115,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4096,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4096,
											"end": 4116,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4116,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4096,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4148,
											"end": 4149,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4150,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4159,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4159,
											"end": 4194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4174,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4174,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4174,
											"end": 4192,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4174,
											"end": 4192,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4174,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4159,
											"end": 4194,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4159,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4212,
											"end": 4213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4217,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4223,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4223,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4223,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4223,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4229,
											"end": 4409,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4229,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4277,
											"end": 4354,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4274,
											"end": 4275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4355,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4378,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4371,
											"end": 4372,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4364,
											"end": 4379,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4402,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4395,
											"end": 4396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4403,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4415,
											"end": 4595,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4415,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4463,
											"end": 4540,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4560,
											"end": 4564,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4557,
											"end": 4558,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4550,
											"end": 4565,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4588,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4581,
											"end": 4582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4589,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 4841,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4724,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4834,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4830,
											"end": 4831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 4835,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4847,
											"end": 4969,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4847,
											"end": 4969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4938,
											"end": 4943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4920,
											"end": 4944,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4920,
											"end": 4944,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4920,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4913,
											"end": 4918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4959,
											"end": 4960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 4957,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4949,
											"end": 4961,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4847,
											"end": 4969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4847,
											"end": 4969,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4975,
											"end": 5097,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4975,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5066,
											"end": 5071,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5048,
											"end": 5072,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5048,
											"end": 5072,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5048,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5046,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5038,
											"end": 5073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5028,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5028,
											"end": 5091,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5085,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5089,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5028,
											"end": 5091,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5028,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4975,
											"end": 5097,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4975,
											"end": 5097,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"myNFTContract()": "caa093b7",
							"specialNftsCount(address)": "37c57593"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC721Enumerable\",\"name\":\"_NFTAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"myNFTContract\",\"outputs\":[{\"internalType\":\"contract IERC721Enumerable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"specialNftsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/2_SpecialNfts.sol\":\"SpecialNfts\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/2_SpecialNfts.sol\":{\"keccak256\":\"0xa393975b9a01095b3425b6c7bc963d318cd86e8f237409744ff6e87fcb79fa15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fbc150dbf44fec4d70a0a2bb4dd17348745e79884ea98c313c7e625880ee07\",\"dweb:/ipfs/QmcHSabeEhegPSkZJXCex4tGtYoPiKRnQkNAgpAPVr3nn5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 164,
								"contract": "contracts/2_SpecialNfts.sol:SpecialNfts",
								"label": "myNFTContract",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC721Enumerable)146"
							}
						],
						"types": {
							"t_contract(IERC721Enumerable)146": {
								"encoding": "inplace",
								"label": "contract IERC721Enumerable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							158
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 159,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 158,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								158
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:0"
									},
									"scope": 115,
									"src": "1809:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2701:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2721:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:0"
									},
									"scope": 115,
									"src": "2644:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3526:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3568:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:0"
									},
									"scope": 115,
									"src": "3495:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4079:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:0"
									},
									"scope": 115,
									"src": "4062:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4464:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4482:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:0"
									},
									"scope": 115,
									"src": "4437:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4678:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4718:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:0"
									},
									"scope": 115,
									"src": "4657:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4911:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4926:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4967:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:0"
									},
									"scope": 115,
									"src": "4885:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4725:0",
							"usedErrors": []
						}
					],
					"src": "108:4868:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							158
						],
						"IERC721": [
							115
						],
						"IERC721Enumerable": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 147,
							"sourceUnit": 116,
							"src": "154:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 120,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "348:7:1"
									},
									"id": 121,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 119,
								"nodeType": "StructuredDocumentation",
								"src": "180:136:1",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 146,
							"linearizedBaseContracts": [
								146,
								115,
								158
							],
							"name": "IERC721Enumerable",
							"nameLocation": "327:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "362:82:1",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "458:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:1"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "495:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:1"
									},
									"scope": 146,
									"src": "449:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "510:171:1",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "695:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "723:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "715:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "738:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "730:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:30:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "768:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:9:1"
									},
									"scope": 146,
									"src": "686:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "783:164:1",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "961:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "982:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "974:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1012:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:9:1"
									},
									"scope": 146,
									"src": "952:69:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "317:706:1",
							"usedErrors": []
						}
					],
					"src": "129:895:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							158
						]
					},
					"id": 159,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 149,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 158,
							"linearizedBaseContracts": [
								158
							],
							"name": "IERC165",
							"nameLocation": "415:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "801:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 151,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:2"
									},
									"scope": 158,
									"src": "774:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 159,
							"src": "405:447:2",
							"usedErrors": []
						}
					],
					"src": "100:753:2"
				},
				"id": 2
			},
			"contracts/2_SpecialNfts.sol": {
				"ast": {
					"absolutePath": "contracts/2_SpecialNfts.sol",
					"exportedSymbols": {
						"IERC165": [
							158
						],
						"IERC721": [
							115
						],
						"IERC721Enumerable": [
							146
						],
						"SpecialNfts": [
							316
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 160,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"id": 161,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 317,
							"sourceUnit": 147,
							"src": "59:79:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "SpecialNfts",
							"nameLocation": "151:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "caa093b7",
									"id": 164,
									"mutability": "mutable",
									"name": "myNFTContract",
									"nameLocation": "195:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "170:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721Enumerable_$146",
										"typeString": "contract IERC721Enumerable"
									},
									"typeName": {
										"id": 163,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 162,
											"name": "IERC721Enumerable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 146,
											"src": "170:17:3"
										},
										"referencedDeclaration": 146,
										"src": "170:17:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Enumerable_$146",
											"typeString": "contract IERC721Enumerable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "260:46:3",
										"statements": [
											{
												"expression": {
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 170,
														"name": "myNFTContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "271:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Enumerable_$146",
															"typeString": "contract IERC721Enumerable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 171,
														"name": "_NFTAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "287:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Enumerable_$146",
															"typeString": "contract IERC721Enumerable"
														}
													},
													"src": "271:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Enumerable_$146",
														"typeString": "contract IERC721Enumerable"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "271:27:3"
											}
										]
									},
									"id": 175,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_NFTAddress",
												"nameLocation": "247:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "229:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721Enumerable_$146",
													"typeString": "contract IERC721Enumerable"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC721Enumerable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 146,
														"src": "229:17:3"
													},
													"referencedDeclaration": 146,
													"src": "229:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Enumerable_$146",
														"typeString": "contract IERC721Enumerable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:31:3"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "260:0:3"
									},
									"scope": 316,
									"src": "217:89:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "388:368:3",
										"statements": [
											{
												"assignments": [
													183
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"mutability": "mutable",
														"name": "NFTsCount",
														"nameLocation": "407:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "399:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "399:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"arguments": [
														{
															"id": 186,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "443:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 184,
															"name": "myNFTContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "419:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Enumerable_$146",
																"typeString": "contract IERC721Enumerable"
															}
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 40,
														"src": "419:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "419:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "399:51:3"
											},
											{
												"assignments": [
													190
												],
												"declarations": [
													{
														"constant": false,
														"id": 190,
														"mutability": "mutable",
														"name": "specialNFTsCount",
														"nameLocation": "469:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "461:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 189,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "461:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 191,
												"nodeType": "VariableDeclarationStatement",
												"src": "461:24:3"
											},
											{
												"body": {
													"id": 218,
													"nodeType": "Block",
													"src": "536:179:3",
													"statements": [
														{
															"assignments": [
																203
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 203,
																	"mutability": "mutable",
																	"name": "_tokenId",
																	"nameLocation": "559:8:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 218,
																	"src": "551:16:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 202,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "551:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 209,
															"initialValue": {
																"arguments": [
																	{
																		"id": 206,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 177,
																		"src": "604:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 207,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "612:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 204,
																		"name": "myNFTContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 164,
																		"src": "570:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Enumerable_$146",
																			"typeString": "contract IERC721Enumerable"
																		}
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenOfOwnerByIndex",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 137,
																	"src": "570:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view external returns (uint256)"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "570:44:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "551:63:3"
														},
														{
															"condition": {
																"arguments": [
																	{
																		"id": 211,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "640:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 210,
																	"name": "isPrime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "632:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) pure returns (bool)"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "632:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 217,
															"nodeType": "IfStatement",
															"src": "629:75:3",
															"trueBody": {
																"id": 216,
																"nodeType": "Block",
																"src": "651:53:3",
																"statements": [
																	{
																		"expression": {
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "670:18:3",
																			"subExpression": {
																				"id": 213,
																				"name": "specialNFTsCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 190,
																				"src": "670:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 215,
																		"nodeType": "ExpressionStatement",
																		"src": "670:18:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 196,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "516:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 197,
														"name": "NFTsCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "520:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "516:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"initializationExpression": {
													"assignments": [
														193
													],
													"declarations": [
														{
															"constant": false,
															"id": 193,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "509:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 219,
															"src": "501:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 192,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "501:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 195,
													"initialValue": {
														"hexValue": "30",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "513:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "501:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "531:3:3",
														"subExpression": {
															"id": 199,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "531:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 201,
													"nodeType": "ExpressionStatement",
													"src": "531:3:3"
												},
												"nodeType": "ForStatement",
												"src": "496:219:3"
											},
											{
												"expression": {
													"id": 220,
													"name": "specialNFTsCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 190,
													"src": "732:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 181,
												"id": 221,
												"nodeType": "Return",
												"src": "725:23:3"
											}
										]
									},
									"functionSelector": "37c57593",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "specialNftsCount",
									"nameLocation": "323:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "348:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "340:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:16:3"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "379:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:9:3"
									},
									"scope": 316,
									"src": "314:442:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "824:168:3",
										"statements": [
											{
												"assignments": [
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "843:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "835:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 230,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "835:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 235,
												"initialValue": {
													"arguments": [
														{
															"id": 233,
															"name": "_num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "852:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 232,
														"name": "sqrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "847:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "847:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "835:22:3"
											},
											{
												"body": {
													"id": 254,
													"nodeType": "Block",
													"src": "900:57:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 246,
																		"name": "_num",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "918:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 247,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "925:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "918:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "930:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "918:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 253,
															"nodeType": "IfStatement",
															"src": "915:30:3",
															"trueBody": {
																"expression": {
																	"hexValue": "66616c7365",
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "940:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"functionReturnParameters": 229,
																"id": 252,
																"nodeType": "Return",
																"src": "933:12:3"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 240,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "887:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 241,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "892:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 255,
												"initializationExpression": {
													"assignments": [
														237
													],
													"declarations": [
														{
															"constant": false,
															"id": 237,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "880:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 255,
															"src": "872:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 236,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "872:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 239,
													"initialValue": {
														"hexValue": "32",
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "884:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "872:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "895:3:3",
														"subExpression": {
															"id": 243,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "895:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 245,
													"nodeType": "ExpressionStatement",
													"src": "895:3:3"
												},
												"nodeType": "ForStatement",
												"src": "868:89:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 256,
														"name": "_num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "976:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "983:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "976:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 229,
												"id": 259,
												"nodeType": "Return",
												"src": "969:15:3"
											}
										]
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPrime",
									"nameLocation": "773:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "_num",
												"nameLocation": "789:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "781:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:14:3"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "818:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "818:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:6:3"
									},
									"scope": 316,
									"src": "764:228:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "1059:253:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 268,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "1074:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1078:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1074:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 304,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1265:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1270:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1265:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 312,
													"nodeType": "IfStatement",
													"src": "1261:44:3",
													"trueBody": {
														"id": 311,
														"nodeType": "Block",
														"src": "1273:32:3",
														"statements": [
															{
																"expression": {
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 307,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "1288:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1292:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1288:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 310,
																"nodeType": "ExpressionStatement",
																"src": "1288:5:3"
															}
														]
													}
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "1070:235:3",
												"trueBody": {
													"id": 303,
													"nodeType": "Block",
													"src": "1081:174:3",
													"statements": [
														{
															"expression": {
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 271,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "1096:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 272,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "1100:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1096:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 274,
															"nodeType": "ExpressionStatement",
															"src": "1096:5:3"
														},
														{
															"assignments": [
																276
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 276,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "1124:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 303,
																	"src": "1116:9:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 275,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1116:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 282,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 277,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "1128:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1132:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1128:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1136:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1128:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1116:21:3"
														},
														{
															"body": {
																"id": 301,
																"nodeType": "Block",
																"src": "1166:78:3",
																"statements": [
																	{
																		"expression": {
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 286,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "1185:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 287,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 276,
																				"src": "1189:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1185:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 289,
																		"nodeType": "ExpressionStatement",
																		"src": "1185:5:3"
																	},
																	{
																		"expression": {
																			"id": 299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 290,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 276,
																				"src": "1209:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 295,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 293,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 291,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 263,
																									"src": "1214:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 292,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 276,
																									"src": "1218:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "1214:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 294,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 276,
																								"src": "1222:1:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1214:9:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 296,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1213:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 297,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1227:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "1213:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1209:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 300,
																		"nodeType": "ExpressionStatement",
																		"src": "1209:19:3"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 283,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "1159:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 284,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "1163:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1159:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 302,
															"nodeType": "WhileStatement",
															"src": "1152:92:3"
														}
													]
												}
											}
										]
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "1009:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1022:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1014:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1014:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1013:11:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1056:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1048:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:11:3"
									},
									"scope": 316,
									"src": "1000:312:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 317,
							"src": "142:1173:3",
							"usedErrors": []
						}
					],
					"src": "33:1282:3"
				},
				"id": 3
			}
		}
	}
}